name: WebApp_CI
on:
  push:
    branches: [master]
    paths:
      - 'src/**'
      - '.github/workflows/maven.yml'
  pull_request:
    branches: [master]
    paths:
      - 'src/**'
      - '.github/workflows/maven.yml'
    types: [opened, synchronize, reopened]

jobs:
  init-workflow:
    name: initworkflow
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub !"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  project-build:
    name: Construct JAR
    runs-on: ubuntu-latest
    needs:
      - init-workflow
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Start MySQL
        run: sudo service mysql start

      - name: Grant MySQL privileges (as root)
        run: |
          mysql -h 127.0.0.1 -u root -p${{ secrets.DB_PASSWORD }} -e "GRANT ALL PRIVILEGES ON *.* TO '${{ secrets.DB_USER }}'@'%' IDENTIFIED BY '${{ secrets.DB_PASSWORD }}'; FLUSH PRIVILEGES;"

      - name: Create Database from script
        run: mysql -h 127.0.0.1 -u ${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} springboot < mysql/script/db_springboot_api.sql

      - name: Install Chrome for selenium
        uses: browser-actions/setup-chrome@latest

      - name: run Chrome Browser for version control
        run: chrome --version

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build jar and analyze SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B clean install sonar:sonar -Dsonar.organization=bazurogg -Dsonar.projectKey=Bazurogg_DemoSpringBoot_WebApp

      - name: Charging artefact
        uses: actions/upload-artifact@v4
        with:
          name: package.jar
          path: target/*.jar
          retention-days: 1

      # message de fin indiquant que tout s'est bien passÃ©
      - run: echo "This job's status is ${{ job.status }}."
        